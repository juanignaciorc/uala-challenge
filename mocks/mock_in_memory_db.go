// Code generated by MockGen. DO NOT EDIT.
// Source: internal/adapters/repositories/in_memory_db/in_memory_db.go
//
// Generated by this command:
//
//	mockgen -source=internal/adapters/repositories/in_memory_db/in_memory_db.go -destination=mocks/mock_in_memory_db.go -package=mock_ports
//

// Package mock_ports is a generated GoMock package.
package mock_ports

import (
	context "context"
	reflect "reflect"

	domain "github.com/juanignaciorc/microbloggin-pltf/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockInMemoryDBTweetsInterface is a mock of InMemoryDBTweetsInterface interface.
type MockInMemoryDBTweetsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInMemoryDBTweetsInterfaceMockRecorder
	isgomock struct{}
}

// MockInMemoryDBTweetsInterfaceMockRecorder is the mock recorder for MockInMemoryDBTweetsInterface.
type MockInMemoryDBTweetsInterfaceMockRecorder struct {
	mock *MockInMemoryDBTweetsInterface
}

// NewMockInMemoryDBTweetsInterface creates a new mock instance.
func NewMockInMemoryDBTweetsInterface(ctrl *gomock.Controller) *MockInMemoryDBTweetsInterface {
	mock := &MockInMemoryDBTweetsInterface{ctrl: ctrl}
	mock.recorder = &MockInMemoryDBTweetsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInMemoryDBTweetsInterface) EXPECT() *MockInMemoryDBTweetsInterfaceMockRecorder {
	return m.recorder
}

// CreateTweet mocks base method.
func (m *MockInMemoryDBTweetsInterface) CreateTweet(ctx context.Context, tweet domain.Tweet) (domain.Tweet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTweet", ctx, tweet)
	ret0, _ := ret[0].(domain.Tweet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTweet indicates an expected call of CreateTweet.
func (mr *MockInMemoryDBTweetsInterfaceMockRecorder) CreateTweet(ctx, tweet any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTweet", reflect.TypeOf((*MockInMemoryDBTweetsInterface)(nil).CreateTweet), ctx, tweet)
}
